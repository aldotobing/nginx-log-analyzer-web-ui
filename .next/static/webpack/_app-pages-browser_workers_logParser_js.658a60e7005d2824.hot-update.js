/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("_app-pages-browser_workers_logParser_js",{

/***/ "(app-pages-browser)/./workers/logParser.js":
/*!******************************!*\
  !*** ./workers/logParser.js ***!
  \******************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("self.onmessage = (e)=>{\n    const logContent = e.data;\n    const lines = logContent.split(\"\\n\");\n    const totalLines = lines.length;\n    const requestStats = {\n        totalRequests: 0,\n        uniqueIPs: new Set(),\n        totalAttackAttempts: 0\n    };\n    const httpMethods = {};\n    const statusCodes = {\n        \"2xx\": 0,\n        \"3xx\": 0,\n        \"4xx\": 0,\n        \"5xx\": 0\n    };\n    const attackDistribution = {\n        \"SQL Injection\": 0,\n        XSS: 0,\n        \"Command Injection\": 0,\n        \"Directory Traversal\": 0,\n        \"Brute Force\": 0\n    };\n    const trafficOverTime = Array(24).fill(0).map((_, i)=>({\n            hour: i,\n            count: 0\n        }));\n    let recentAttacks = [];\n    const attackPatterns = {\n        \"SQL Injection\": new RegExp(\"(%27|'|--|;|--)|(%20|\\\\+)?(SELECT|UNION|INSERT|DELETE|UPDATE|ALTER|DROP|EXEC)(%20|\\\\+)|(OR(%20|\\\\+)(\\\\d|')?='?)|(AND(%20|\\\\+)(\\\\d|')?='?)|('\\\\s*--)|CHAR\\\\([0-9,]+\\\\)|CONCAT\\\\(|(\\\\?|&)(id|page|user|auth)=[^&]*([%27|'|--|;|--]|SELECT|UNION|INSERT|DELETE|UPDATE|ALTER|DROP|EXEC|OR|AND)[^&]*\", \"i\"),\n        XSS: new RegExp(\"<script[^>]*>|javascript:|onerror\\\\s*=|onload\\\\s*=|onmouseover\\\\s*=|onclick\\\\s*=|eval\\\\(|alert\\\\(|document\\\\.cookie|document\\\\.location|fromCharCode\\\\s*\\\\(|expression\\\\s*\\\\(|<img[^>]*src\\\\s*=\\\\s*['\\\"]?javascript:|<iframe[^>]*>|<object[^>]*>|<embed[^>]*>|<svg[^>]*on[^>]*=|<math[^>]*on[^>]*=|<[^>]+style\\\\s*=\\\\s*['\\\"]?[^>]*expression\\\\(|data:text/html|vbscript:|innerHTML|parentNode\\\\.insertBefore|setTimeout\\\\s*\\\\(|setInterval\\\\s*\\\\(\", \"i\"),\n        \"Command Injection\": new RegExp(\"\\\\b(cat|ls|id|uname|whoami|pwd|rm|touch|wget|curl|scp|rsync|ftp|nc|nmap|ping|traceroute|telnet|ssh)\\\\b(\\\\s+|$)|\\\\b(sh|bash|zsh|dash|fish|python[23]?|perl|ruby|php|java|node|gcc|g\\\\+\\\\+)\\\\b(\\\\s+|$)|[;&|]{2,}|\\\\$\\\\(.*?\\\\)|\\\\s+[2]?[>|&]|\\\\s+[<>]|\\\\b(exec|system|passthru|shell_exec|popen|eval|assert|proc_open|pcntl_exec|preg_replace\\\\(.*?e\\\\))\\\\b|(?<!by=|sort=|customer_id=|limit=|page=)\\\\b(id|def\\\\.id)\\\\b(\\\\s+|$)\", \"i\"),\n        \"Directory Traversal\": new RegExp(\"(\\\\.\\\\./){2,}|(%2e){2,}|/etc/passwd|wp-config(\\\\.php)?|c:/windows|file:\\\\s*/|(/|%2f)(root|bin|home|usr|opt)/\", \"i\"),\n        \"Brute Force\": /login|signin|authenticate/i\n    };\n    // Valid HTTP Methods (to avoid parsing non-HTTP requests)\n    const validHttpMethods = [\n        \"GET\",\n        \"POST\",\n        \"PUT\",\n        \"DELETE\",\n        \"HEAD\",\n        \"OPTIONS\",\n        \"PATCH\",\n        \"CONNECT\",\n        \"TRACE\"\n    ];\n    lines.forEach((line, index)=>{\n        if (index % 1000 === 0) {\n            self.postMessage({\n                progress: Math.round(index / totalLines * 100)\n            });\n        }\n        const match = line.match(/^(\\S+) (\\S+) (\\S+) \\[([^\\]]+)\\] \"(\\S+) ([^\"]*)\" (\\d+) (\\d+) \"([^\"]*)\" \"([^\"]*)\"/);\n        if (match) {\n            const [, ipAddress, , , timestamp, method, path, status, , referer, userAgent] = match;\n            // Validating HTTP Method\n            if (!validHttpMethods.includes(method)) {\n                return; // Skip if the method is invalid\n            }\n            requestStats.totalRequests++;\n            requestStats.uniqueIPs.add(ipAddress);\n            httpMethods[method] = (httpMethods[method] || 0) + 1;\n            const statusGroup = status[0] + \"xx\";\n            statusCodes[statusGroup]++;\n            const hour = new Date(timestamp.replace(\":\", \" \")).getHours();\n            trafficOverTime[hour].count++;\n            let attackType = null;\n            for (const [type, pattern] of Object.entries(attackPatterns)){\n                if (pattern.test(path) || pattern.test(referer) || pattern.test(userAgent)) {\n                    attackType = type;\n                    attackDistribution[type]++;\n                    requestStats.totalAttackAttempts++;\n                    break;\n                }\n            }\n            if (attackType) {\n                recentAttacks.push({\n                    timestamp,\n                    ipAddress,\n                    attackType,\n                    requestPath: path\n                });\n            }\n        }\n    });\n    requestStats.uniqueIPs = requestStats.uniqueIPs.size;\n    recentAttacks = recentAttacks.slice(-100).reverse(); // Keep only the last 100 attacks\n    self.postMessage({\n        requestStats,\n        httpMethods,\n        statusCodes,\n        attackDistribution,\n        trafficOverTime,\n        recentAttacks\n    });\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3dvcmtlcnMvbG9nUGFyc2VyLmpzIiwibWFwcGluZ3MiOiJBQUFBQSxLQUFLQyxTQUFTLEdBQUcsQ0FBQ0M7SUFDaEIsTUFBTUMsYUFBYUQsRUFBRUUsSUFBSTtJQUN6QixNQUFNQyxRQUFRRixXQUFXRyxLQUFLLENBQUM7SUFDL0IsTUFBTUMsYUFBYUYsTUFBTUcsTUFBTTtJQUUvQixNQUFNQyxlQUFlO1FBQ25CQyxlQUFlO1FBQ2ZDLFdBQVcsSUFBSUM7UUFDZkMscUJBQXFCO0lBQ3ZCO0lBQ0EsTUFBTUMsY0FBYyxDQUFDO0lBQ3JCLE1BQU1DLGNBQWM7UUFBRSxPQUFPO1FBQUcsT0FBTztRQUFHLE9BQU87UUFBRyxPQUFPO0lBQUU7SUFDN0QsTUFBTUMscUJBQXFCO1FBQ3pCLGlCQUFpQjtRQUNqQkMsS0FBSztRQUNMLHFCQUFxQjtRQUNyQix1QkFBdUI7UUFDdkIsZUFBZTtJQUNqQjtJQUNBLE1BQU1DLGtCQUFrQkMsTUFBTSxJQUMzQkMsSUFBSSxDQUFDLEdBQ0xDLEdBQUcsQ0FBQyxDQUFDQyxHQUFHQyxJQUFPO1lBQUVDLE1BQU1EO1lBQUdFLE9BQU87UUFBRTtJQUN0QyxJQUFJQyxnQkFBZ0IsRUFBRTtJQUV0QixNQUFNQyxpQkFBaUI7UUFDckIsaUJBQWlCLElBQUlDLE9BQ25CLG1TQUNBO1FBRUZYLEtBQUssSUFBSVcsT0FDUCxxYkFDQTtRQUVGLHFCQUFxQixJQUFJQSxPQUN2QixnYUFDQTtRQUVGLHVCQUF1QixJQUFJQSxPQUN6QixnSEFDQTtRQUVGLGVBQWU7SUFDakI7SUFFQSwwREFBMEQ7SUFDMUQsTUFBTUMsbUJBQW1CO1FBQ3ZCO1FBQ0E7UUFDQTtRQUNBO1FBQ0E7UUFDQTtRQUNBO1FBQ0E7UUFDQTtLQUNEO0lBRUR4QixNQUFNeUIsT0FBTyxDQUFDLENBQUNDLE1BQU1DO1FBQ25CLElBQUlBLFFBQVEsU0FBUyxHQUFHO1lBQ3RCaEMsS0FBS2lDLFdBQVcsQ0FBQztnQkFBRUMsVUFBVUMsS0FBS0MsS0FBSyxDQUFDLFFBQVM3QixhQUFjO1lBQUs7UUFDdEU7UUFFQSxNQUFNOEIsUUFBUU4sS0FBS00sS0FBSyxDQUN0QjtRQUVGLElBQUlBLE9BQU87WUFDVCxNQUFNLEdBRUpDLGVBR0FDLFdBQ0FDLFFBQ0FDLE1BQ0FDLFVBRUFDLFNBQ0FDLFVBQ0QsR0FBR1A7WUFFSix5QkFBeUI7WUFDekIsSUFBSSxDQUFDUixpQkFBaUJnQixRQUFRLENBQUNMLFNBQVM7Z0JBQ3RDLFFBQVEsZ0NBQWdDO1lBQzFDO1lBRUEvQixhQUFhQyxhQUFhO1lBQzFCRCxhQUFhRSxTQUFTLENBQUNtQyxHQUFHLENBQUNSO1lBRTNCeEIsV0FBVyxDQUFDMEIsT0FBTyxHQUFHLENBQUMxQixXQUFXLENBQUMwQixPQUFPLElBQUksS0FBSztZQUVuRCxNQUFNTyxjQUFjTCxNQUFNLENBQUMsRUFBRSxHQUFHO1lBQ2hDM0IsV0FBVyxDQUFDZ0MsWUFBWTtZQUV4QixNQUFNdkIsT0FBTyxJQUFJd0IsS0FBS1QsVUFBVVUsT0FBTyxDQUFDLEtBQUssTUFBTUMsUUFBUTtZQUMzRGhDLGVBQWUsQ0FBQ00sS0FBSyxDQUFDQyxLQUFLO1lBRTNCLElBQUkwQixhQUFhO1lBQ2pCLEtBQUssTUFBTSxDQUFDQyxNQUFNQyxRQUFRLElBQUlDLE9BQU9DLE9BQU8sQ0FBQzVCLGdCQUFpQjtnQkFDNUQsSUFDRTBCLFFBQVFHLElBQUksQ0FBQ2YsU0FDYlksUUFBUUcsSUFBSSxDQUFDYixZQUNiVSxRQUFRRyxJQUFJLENBQUNaLFlBQ2I7b0JBQ0FPLGFBQWFDO29CQUNicEMsa0JBQWtCLENBQUNvQyxLQUFLO29CQUN4QjNDLGFBQWFJLG1CQUFtQjtvQkFDaEM7Z0JBQ0Y7WUFDRjtZQUVBLElBQUlzQyxZQUFZO2dCQUNkekIsY0FBYytCLElBQUksQ0FBQztvQkFDakJsQjtvQkFDQUQ7b0JBQ0FhO29CQUNBTyxhQUFhakI7Z0JBQ2Y7WUFDRjtRQUNGO0lBQ0Y7SUFFQWhDLGFBQWFFLFNBQVMsR0FBR0YsYUFBYUUsU0FBUyxDQUFDZ0QsSUFBSTtJQUNwRGpDLGdCQUFnQkEsY0FBY2tDLEtBQUssQ0FBQyxDQUFDLEtBQUtDLE9BQU8sSUFBSSxpQ0FBaUM7SUFFdEY3RCxLQUFLaUMsV0FBVyxDQUFDO1FBQ2Z4QjtRQUNBSztRQUNBQztRQUNBQztRQUNBRTtRQUNBUTtJQUNGO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vd29ya2Vycy9sb2dQYXJzZXIuanM/NTkwMCJdLCJzb3VyY2VzQ29udGVudCI6WyJzZWxmLm9ubWVzc2FnZSA9IChlKSA9PiB7XG4gIGNvbnN0IGxvZ0NvbnRlbnQgPSBlLmRhdGE7XG4gIGNvbnN0IGxpbmVzID0gbG9nQ29udGVudC5zcGxpdChcIlxcblwiKTtcbiAgY29uc3QgdG90YWxMaW5lcyA9IGxpbmVzLmxlbmd0aDtcblxuICBjb25zdCByZXF1ZXN0U3RhdHMgPSB7XG4gICAgdG90YWxSZXF1ZXN0czogMCxcbiAgICB1bmlxdWVJUHM6IG5ldyBTZXQoKSxcbiAgICB0b3RhbEF0dGFja0F0dGVtcHRzOiAwLFxuICB9O1xuICBjb25zdCBodHRwTWV0aG9kcyA9IHt9O1xuICBjb25zdCBzdGF0dXNDb2RlcyA9IHsgXCIyeHhcIjogMCwgXCIzeHhcIjogMCwgXCI0eHhcIjogMCwgXCI1eHhcIjogMCB9O1xuICBjb25zdCBhdHRhY2tEaXN0cmlidXRpb24gPSB7XG4gICAgXCJTUUwgSW5qZWN0aW9uXCI6IDAsXG4gICAgWFNTOiAwLFxuICAgIFwiQ29tbWFuZCBJbmplY3Rpb25cIjogMCxcbiAgICBcIkRpcmVjdG9yeSBUcmF2ZXJzYWxcIjogMCxcbiAgICBcIkJydXRlIEZvcmNlXCI6IDAsXG4gIH07XG4gIGNvbnN0IHRyYWZmaWNPdmVyVGltZSA9IEFycmF5KDI0KVxuICAgIC5maWxsKDApXG4gICAgLm1hcCgoXywgaSkgPT4gKHsgaG91cjogaSwgY291bnQ6IDAgfSkpO1xuICBsZXQgcmVjZW50QXR0YWNrcyA9IFtdO1xuXG4gIGNvbnN0IGF0dGFja1BhdHRlcm5zID0ge1xuICAgIFwiU1FMIEluamVjdGlvblwiOiBuZXcgUmVnRXhwKFxuICAgICAgXCIoJTI3fCd8LS18O3wtLSl8KCUyMHxcXFxcKyk/KFNFTEVDVHxVTklPTnxJTlNFUlR8REVMRVRFfFVQREFURXxBTFRFUnxEUk9QfEVYRUMpKCUyMHxcXFxcKyl8KE9SKCUyMHxcXFxcKykoXFxcXGR8Jyk/PSc/KXwoQU5EKCUyMHxcXFxcKykoXFxcXGR8Jyk/PSc/KXwoJ1xcXFxzKi0tKXxDSEFSXFxcXChbMC05LF0rXFxcXCl8Q09OQ0FUXFxcXCh8KFxcXFw/fCYpKGlkfHBhZ2V8dXNlcnxhdXRoKT1bXiZdKihbJTI3fCd8LS18O3wtLV18U0VMRUNUfFVOSU9OfElOU0VSVHxERUxFVEV8VVBEQVRFfEFMVEVSfERST1B8RVhFQ3xPUnxBTkQpW14mXSpcIixcbiAgICAgIFwiaVwiXG4gICAgKSxcbiAgICBYU1M6IG5ldyBSZWdFeHAoXG4gICAgICBcIjxzY3JpcHRbXj5dKj58amF2YXNjcmlwdDp8b25lcnJvclxcXFxzKj18b25sb2FkXFxcXHMqPXxvbm1vdXNlb3ZlclxcXFxzKj18b25jbGlja1xcXFxzKj18ZXZhbFxcXFwofGFsZXJ0XFxcXCh8ZG9jdW1lbnRcXFxcLmNvb2tpZXxkb2N1bWVudFxcXFwubG9jYXRpb258ZnJvbUNoYXJDb2RlXFxcXHMqXFxcXCh8ZXhwcmVzc2lvblxcXFxzKlxcXFwofDxpbWdbXj5dKnNyY1xcXFxzKj1cXFxccypbJ1xcXCJdP2phdmFzY3JpcHQ6fDxpZnJhbWVbXj5dKj58PG9iamVjdFtePl0qPnw8ZW1iZWRbXj5dKj58PHN2Z1tePl0qb25bXj5dKj18PG1hdGhbXj5dKm9uW14+XSo9fDxbXj5dK3N0eWxlXFxcXHMqPVxcXFxzKlsnXFxcIl0/W14+XSpleHByZXNzaW9uXFxcXCh8ZGF0YTp0ZXh0L2h0bWx8dmJzY3JpcHQ6fGlubmVySFRNTHxwYXJlbnROb2RlXFxcXC5pbnNlcnRCZWZvcmV8c2V0VGltZW91dFxcXFxzKlxcXFwofHNldEludGVydmFsXFxcXHMqXFxcXChcIixcbiAgICAgIFwiaVwiXG4gICAgKSxcbiAgICBcIkNvbW1hbmQgSW5qZWN0aW9uXCI6IG5ldyBSZWdFeHAoXG4gICAgICBcIlxcXFxiKGNhdHxsc3xpZHx1bmFtZXx3aG9hbWl8cHdkfHJtfHRvdWNofHdnZXR8Y3VybHxzY3B8cnN5bmN8ZnRwfG5jfG5tYXB8cGluZ3x0cmFjZXJvdXRlfHRlbG5ldHxzc2gpXFxcXGIoXFxcXHMrfCQpfFxcXFxiKHNofGJhc2h8enNofGRhc2h8ZmlzaHxweXRob25bMjNdP3xwZXJsfHJ1Ynl8cGhwfGphdmF8bm9kZXxnY2N8Z1xcXFwrXFxcXCspXFxcXGIoXFxcXHMrfCQpfFs7JnxdezIsfXxcXFxcJFxcXFwoLio/XFxcXCl8XFxcXHMrWzJdP1s+fCZdfFxcXFxzK1s8Pl18XFxcXGIoZXhlY3xzeXN0ZW18cGFzc3RocnV8c2hlbGxfZXhlY3xwb3BlbnxldmFsfGFzc2VydHxwcm9jX29wZW58cGNudGxfZXhlY3xwcmVnX3JlcGxhY2VcXFxcKC4qP2VcXFxcKSlcXFxcYnwoPzwhYnk9fHNvcnQ9fGN1c3RvbWVyX2lkPXxsaW1pdD18cGFnZT0pXFxcXGIoaWR8ZGVmXFxcXC5pZClcXFxcYihcXFxccyt8JClcIixcbiAgICAgIFwiaVwiXG4gICAgKSxcbiAgICBcIkRpcmVjdG9yeSBUcmF2ZXJzYWxcIjogbmV3IFJlZ0V4cChcbiAgICAgIFwiKFxcXFwuXFxcXC4vKXsyLH18KCUyZSl7Mix9fC9ldGMvcGFzc3dkfHdwLWNvbmZpZyhcXFxcLnBocCk/fGM6L3dpbmRvd3N8ZmlsZTpcXFxccyovfCgvfCUyZikocm9vdHxiaW58aG9tZXx1c3J8b3B0KS9cIixcbiAgICAgIFwiaVwiXG4gICAgKSxcbiAgICBcIkJydXRlIEZvcmNlXCI6IC9sb2dpbnxzaWduaW58YXV0aGVudGljYXRlL2ksIC8vIEFkZCBicnV0ZSBmb3JjZSBsb2dpYyBoZXJlIGlmIG5lY2Vzc2FyeVxuICB9O1xuXG4gIC8vIFZhbGlkIEhUVFAgTWV0aG9kcyAodG8gYXZvaWQgcGFyc2luZyBub24tSFRUUCByZXF1ZXN0cylcbiAgY29uc3QgdmFsaWRIdHRwTWV0aG9kcyA9IFtcbiAgICBcIkdFVFwiLFxuICAgIFwiUE9TVFwiLFxuICAgIFwiUFVUXCIsXG4gICAgXCJERUxFVEVcIixcbiAgICBcIkhFQURcIixcbiAgICBcIk9QVElPTlNcIixcbiAgICBcIlBBVENIXCIsXG4gICAgXCJDT05ORUNUXCIsXG4gICAgXCJUUkFDRVwiLFxuICBdO1xuXG4gIGxpbmVzLmZvckVhY2goKGxpbmUsIGluZGV4KSA9PiB7XG4gICAgaWYgKGluZGV4ICUgMTAwMCA9PT0gMCkge1xuICAgICAgc2VsZi5wb3N0TWVzc2FnZSh7IHByb2dyZXNzOiBNYXRoLnJvdW5kKChpbmRleCAvIHRvdGFsTGluZXMpICogMTAwKSB9KTtcbiAgICB9XG5cbiAgICBjb25zdCBtYXRjaCA9IGxpbmUubWF0Y2goXG4gICAgICAvXihcXFMrKSAoXFxTKykgKFxcUyspIFxcWyhbXlxcXV0rKVxcXSBcIihcXFMrKSAoW15cIl0qKVwiIChcXGQrKSAoXFxkKykgXCIoW15cIl0qKVwiIFwiKFteXCJdKilcIi9cbiAgICApO1xuICAgIGlmIChtYXRjaCkge1xuICAgICAgY29uc3QgW1xuICAgICAgICAsXG4gICAgICAgIGlwQWRkcmVzcyxcbiAgICAgICAgLFxuICAgICAgICAsXG4gICAgICAgIHRpbWVzdGFtcCxcbiAgICAgICAgbWV0aG9kLFxuICAgICAgICBwYXRoLFxuICAgICAgICBzdGF0dXMsXG4gICAgICAgICxcbiAgICAgICAgcmVmZXJlcixcbiAgICAgICAgdXNlckFnZW50LFxuICAgICAgXSA9IG1hdGNoO1xuXG4gICAgICAvLyBWYWxpZGF0aW5nIEhUVFAgTWV0aG9kXG4gICAgICBpZiAoIXZhbGlkSHR0cE1ldGhvZHMuaW5jbHVkZXMobWV0aG9kKSkge1xuICAgICAgICByZXR1cm47IC8vIFNraXAgaWYgdGhlIG1ldGhvZCBpcyBpbnZhbGlkXG4gICAgICB9XG5cbiAgICAgIHJlcXVlc3RTdGF0cy50b3RhbFJlcXVlc3RzKys7XG4gICAgICByZXF1ZXN0U3RhdHMudW5pcXVlSVBzLmFkZChpcEFkZHJlc3MpO1xuXG4gICAgICBodHRwTWV0aG9kc1ttZXRob2RdID0gKGh0dHBNZXRob2RzW21ldGhvZF0gfHwgMCkgKyAxO1xuXG4gICAgICBjb25zdCBzdGF0dXNHcm91cCA9IHN0YXR1c1swXSArIFwieHhcIjtcbiAgICAgIHN0YXR1c0NvZGVzW3N0YXR1c0dyb3VwXSsrO1xuXG4gICAgICBjb25zdCBob3VyID0gbmV3IERhdGUodGltZXN0YW1wLnJlcGxhY2UoXCI6XCIsIFwiIFwiKSkuZ2V0SG91cnMoKTtcbiAgICAgIHRyYWZmaWNPdmVyVGltZVtob3VyXS5jb3VudCsrO1xuXG4gICAgICBsZXQgYXR0YWNrVHlwZSA9IG51bGw7XG4gICAgICBmb3IgKGNvbnN0IFt0eXBlLCBwYXR0ZXJuXSBvZiBPYmplY3QuZW50cmllcyhhdHRhY2tQYXR0ZXJucykpIHtcbiAgICAgICAgaWYgKFxuICAgICAgICAgIHBhdHRlcm4udGVzdChwYXRoKSB8fFxuICAgICAgICAgIHBhdHRlcm4udGVzdChyZWZlcmVyKSB8fFxuICAgICAgICAgIHBhdHRlcm4udGVzdCh1c2VyQWdlbnQpXG4gICAgICAgICkge1xuICAgICAgICAgIGF0dGFja1R5cGUgPSB0eXBlO1xuICAgICAgICAgIGF0dGFja0Rpc3RyaWJ1dGlvblt0eXBlXSsrO1xuICAgICAgICAgIHJlcXVlc3RTdGF0cy50b3RhbEF0dGFja0F0dGVtcHRzKys7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgaWYgKGF0dGFja1R5cGUpIHtcbiAgICAgICAgcmVjZW50QXR0YWNrcy5wdXNoKHtcbiAgICAgICAgICB0aW1lc3RhbXAsXG4gICAgICAgICAgaXBBZGRyZXNzLFxuICAgICAgICAgIGF0dGFja1R5cGUsXG4gICAgICAgICAgcmVxdWVzdFBhdGg6IHBhdGgsXG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH1cbiAgfSk7XG5cbiAgcmVxdWVzdFN0YXRzLnVuaXF1ZUlQcyA9IHJlcXVlc3RTdGF0cy51bmlxdWVJUHMuc2l6ZTtcbiAgcmVjZW50QXR0YWNrcyA9IHJlY2VudEF0dGFja3Muc2xpY2UoLTEwMCkucmV2ZXJzZSgpOyAvLyBLZWVwIG9ubHkgdGhlIGxhc3QgMTAwIGF0dGFja3NcblxuICBzZWxmLnBvc3RNZXNzYWdlKHtcbiAgICByZXF1ZXN0U3RhdHMsXG4gICAgaHR0cE1ldGhvZHMsXG4gICAgc3RhdHVzQ29kZXMsXG4gICAgYXR0YWNrRGlzdHJpYnV0aW9uLFxuICAgIHRyYWZmaWNPdmVyVGltZSxcbiAgICByZWNlbnRBdHRhY2tzLFxuICB9KTtcbn07XG4iXSwibmFtZXMiOlsic2VsZiIsIm9ubWVzc2FnZSIsImUiLCJsb2dDb250ZW50IiwiZGF0YSIsImxpbmVzIiwic3BsaXQiLCJ0b3RhbExpbmVzIiwibGVuZ3RoIiwicmVxdWVzdFN0YXRzIiwidG90YWxSZXF1ZXN0cyIsInVuaXF1ZUlQcyIsIlNldCIsInRvdGFsQXR0YWNrQXR0ZW1wdHMiLCJodHRwTWV0aG9kcyIsInN0YXR1c0NvZGVzIiwiYXR0YWNrRGlzdHJpYnV0aW9uIiwiWFNTIiwidHJhZmZpY092ZXJUaW1lIiwiQXJyYXkiLCJmaWxsIiwibWFwIiwiXyIsImkiLCJob3VyIiwiY291bnQiLCJyZWNlbnRBdHRhY2tzIiwiYXR0YWNrUGF0dGVybnMiLCJSZWdFeHAiLCJ2YWxpZEh0dHBNZXRob2RzIiwiZm9yRWFjaCIsImxpbmUiLCJpbmRleCIsInBvc3RNZXNzYWdlIiwicHJvZ3Jlc3MiLCJNYXRoIiwicm91bmQiLCJtYXRjaCIsImlwQWRkcmVzcyIsInRpbWVzdGFtcCIsIm1ldGhvZCIsInBhdGgiLCJzdGF0dXMiLCJyZWZlcmVyIiwidXNlckFnZW50IiwiaW5jbHVkZXMiLCJhZGQiLCJzdGF0dXNHcm91cCIsIkRhdGUiLCJyZXBsYWNlIiwiZ2V0SG91cnMiLCJhdHRhY2tUeXBlIiwidHlwZSIsInBhdHRlcm4iLCJPYmplY3QiLCJlbnRyaWVzIiwidGVzdCIsInB1c2giLCJyZXF1ZXN0UGF0aCIsInNpemUiLCJzbGljZSIsInJldmVyc2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./workers/logParser.js\n"));

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ /* webpack/runtime/getFullHash */
/******/ !function() {
/******/ 	__webpack_require__.h = function() { return "3629c689b8a9fc9d"; }
/******/ }();
/******/ 
/******/ }
);